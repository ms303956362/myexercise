#include "usual.h"

class Solution {
public:
    long long kthSmallestProduct(vector<int>& nums1, vector<int>& nums2, long long k) {
        long long n1 = nums1.size(), n2 = nums2.size(), in1 = 0, in2 = 0;
        while (in1 < n1 && nums1[in1] < 0)
            ++in1;
        while (in2 < n2 && nums2[in2] < 0)
            ++in2;
        vector<long long> nums1_neg(nums1.begin(), nums1.begin() + in1), nums1_pos(nums1.begin() + in1, nums1.end());
        vector<long long> nums2_neg(nums2.begin(), nums2.begin() + in2), nums2_pos(nums2.begin() + in2, nums2.end());
        vector<long long> re_nums1_pos(nums1_pos), re_nums2_pos(nums2_pos);
        reverse(re_nums1_pos.begin(), re_nums1_pos.end());
        reverse(re_nums2_pos.begin(), re_nums2_pos.end());
        vector<long long> re_nums1_neg(nums1_neg), re_nums2_neg(nums2_neg);
        reverse(re_nums1_neg.begin(), re_nums1_neg.end());
        reverse(re_nums2_neg.begin(), re_nums2_neg.end());
        vector<long long> p1, p2, p3, p4;
        dij(nums1_pos, nums2_pos, p1);
        dij(nums1_neg, re_nums2_pos, p2);
        dij(nums2_neg, re_nums1_pos, p3);
        dij(re_nums1_neg, re_nums2_neg, p4);
        long long ans = 0;
        long long i1 = 0, i2 = 0, i3 = 0, i4 = 0, m1 = p1.size(), m2 = p2.size(), m3 = p3.size(), m4 = p4.size();
        for (long long i = 0; i < k; ++i) {
            // long long min_num = min({})
            if (i1 < m1 && (i2 == m2 || p1[i1] <= p2[i2]) && (i3 == m3 || p1[i1] <= p3[i3]) && (i4 == m4 || p1[i1] <= p4[i4])) {
                ans = p1[i1];
                ++i1;
            } else if (i2 < m2 && (i1 == m1 || p2[i2] <= p1[i1]) && (i3 == m3 || p2[i2] <= p3[i3]) && (i4 == m4 || p2[i2] <= p4[i4])) {
                ans = p2[i2];
                ++i2;
            } else if (i3 < m3 && (i1 == m1 || p3[i3] <= p1[i1]) && (i2 == m2 || p3[i3] <= p2[i2]) && (i4 == m4 || p3[i3] <= p4[i4])) {
                ans = p3[i3];
                ++i3;
            } else {
                ans = p4[i4];
                ++i4;
            }
        }
        return ans;
    }

    void dij(vector<long long>& a, vector<long long>& b, vector<long long>& ans) {
        long long n = a.size(), m = b.size();
        if (n == 0) {
            return;
        }
        if (m == 0) {
            return;
        }
        priority_queue<vector<long long>, vector<vector<long long>>, greater<vector<long long>>> q;
        q.push({0, 0, 0});
        vector<vector<bool>> vst(n, vector<bool>(m, false));
        while (!q.empty()) {
            long long p = q.top()[0], u = q.top()[1], v = q.top()[2];
            q.pop();
            if (vst[u][v])
                continue;
            vst[u][v] = true;
            ans.push_back(a[u] * b[v]);
            if (v + 1 < m && !vst[u][v + 1])
                q.push({a[u] * b[v + 1], u, v + 1});
            if (u + 1 < n && !vst[u + 1][v])
                q.push({a[u + 1] * b[v], u + 1, v});
        }
    }
};

int main(int argc, char const *argv[])
{
    vector<int> a{-100000, 100000}, b{-100000, 100000};
    int k = 1;
    Solution().kthSmallestProduct(a, b, k);

    return 0;
}

/*
[-500,-499,-499,-499,-497,-497,-496,-496,-495,-494,-493,-493,-493,-492,-491,-491,-491,-490,-489,-487,-486,-485,-485,-482,-480,-480,-479,-478,-477,-472,-470,-470,-470,-469,-469,-468,-468,-468,-467,-466,-466,-465,-465,-461,-460,-457,-457,-457,-456,-455,-454,-454,-453,-452,-451,-451,-450,-450,-449,-448,-446,-445,-445,-444,-444,-437,-437,-435,-435,-433,-433,-432,-430,-425,-425,-424,-423,-423,-423,-421,-418,-417,-416,-415,-414,-414,-413,-409,-408,-408,-408,-404,-404,-402,-401,-399,-399,-399,-396,-395,-393,-393,-392,-392,-392,-392,-391,-391,-390,-390,-387,-386,-386,-385,-385,-379,-378,-377,-377,-377,-374,-373,-371,-370,-369,-368,-367,-366,-365,-364,-363,-363,-363,-363,-362,-361,-360,-360,-360,-353,-353,-352,-352,-352,-352,-351,-351,-350,-350,-349,-348,-348,-345,-345,-343,-342,-342,-340,-339,-338,-337,-335,-334,-333,-333,-332,-332,-331,-330,-329,-327,-325,-324,-323,-321,-320,-318,-318,-314,-314,-313,-313,-312,-311,-311,-311,-309,-309,-309,-306,-306,-305,-305,-304,-304,-303,-301,-298,-297,-295,-295,-294,-294,-294,-292,-291,-291,-291,-289,-287,-286,-286,-285,-284,-283,-281,-280,-279,-278,-276,-275,-275,-274,-274,-273,-270,-269,-269,-267,-267,-266,-266,-264,-263,-262,-261,-260,-259,-259,-258,-258,-257,-256,-256,-255,-255,-255,-252,-249,-249,-248,-248,-248,-248,-246,-246,-243,-242,-242,-240,-239,-238,-237,-237,-235,-234,-234,-230,-227,-227,-226,-225,-225,-224,-223,-223,-219,-219,-215,-214,-213,-211,-210,-210,-208,-205,-205,-204,-204,-201,-201,-200,-199,-196,-194,-189,-188,-187,-185,-185,-182,-181,-180,-179,-178,-178,-177,-176,-175,-174,-172,-172,-170,-169,-169,-168,-167,-167,-166,-166,-165,-164,-164,-161,-161,-161,-161,-161,-160,-159,-159,-157,-157,-157,-157,-155,-154,-153,-153,-153,-152,-149,-149,-147,-146,-144,-144,-144,-143,-141,-141,-140,-139,-138,-138,-137,-137,-136,-136,-136,-135,-135,-133,-132,-132,-132,-130,-130,-129,-129,-126,-126,-126,-125,-125,-124,-123,-118,-118,-117,-117,-116,-115,-113,-113,-111,-109,-103,-103,-103,-102,-102,-102,-101,-101,-100,-99,-98,-98,-97,-97,-97,-94,-94,-92,-92,-91,-89,-88,-87,-84,-84,-84,-81,-81,-79,-79,-77,-77,-76,-75,-75,-75,-75,-75,-73,-72,-72,-71,-71,-71,-69,-68,-68,-67,-67,-64,-64,-64,-61,-61,-61,-61,-60,-59,-59,-59,-59,-58,-54,-54,-54,-52,-50,-48,-48,-47,-46,-46,-43,-43,-40,-39,-38,-38,-38,-38,-38,-36,-35,-30,-30,-30,-29,-28,-27,-27,-24,-23,-22,-21,-21,-20,-18,-16,-16,-15,-14,-14,-14,-13,-12,-11,-10,-10,-9,-7,-7,-6,-3,-3,-3,-3,-1,0,1,2,3,6,6,7,8,9,9,10,10,13,17,18,19,19,21,21,25,26,27,28,28,28,28,30,34,35,35,36,37,38,38,41,41,42,42,44,44,45,45,45,46,46,46,49,50,50,51,53,54,54,56,56,57,57,57,58,59,61,62,63,64,64,67,67,67,68,68,69,69,70,70,70,72,72,73,75,76,78,79,81,82,82,82,83,83,83,86,86,88,88,89,91,92,94,94,96,97,97,98,98,100,100,100,101,104,104,105,106,107,109,110,111,112,113,114,116,117,118,118,118,119,120,120,120,123,123,126,127,128,128,132,134,138,139,140,141,143,144,145,145,146,146,147,153,154,155,157,158,159,160,161,162,163,163,164,164,164,165,165,166,167,171,172,173,174,175,175,176,177,179,180,180,183,183,184,187,188,188,189,189,190,190,191,191,194,195,196,196,196,197,198,199,200,202,203,204,205,205,206,206,207,207,208,210,210,211,211,211,215,216,216,218,218,218,218,221,222,223,223,225,226,227,229,229,229,231,234,235,236,237,237,238,238,238,239,240,241,242,249,256,258,260,260,264,268,269,270,271,272,272,272,273,274,275,276,276,278,278,280,282,282,282,284,285,286,287,287,291,291,291,293,293,294,294,294,294,294,296,297,298,299,300,300,300,302,302,304,304,305,306,306,306,307,308,311,312,314,316,317,317,317,317,319,319,320,320,321,323,324,325,325,326,329,330,331,331,331,334,335,335,340,340,341,341,342,342,342,342,345,345,346,346,348,348,349,349,351,355,356,356,358,358,358,358,359,362,362,362,363,363,363,364,364,366,368,370,371,372,373,373,375,377,377,378,378,381,382,383,383,383,384,386,387,387,387,388,390,392,392,393,396,397,398,398,398,399,400,400,401,402,403,403,406,407,408,408,409,410,411,411,412,412,412,413,415,417,420,420,421,421,423,423,425,425,426,426,427,427,427,427,431,433,434,434,435,436,436,437,440,440,442,442,443,444,445,448,448,448,449,450,451,453,453,454,455,456,457,461,463,464,464,464,465,467,467,468,471,472,472,474,476,476,476,476,477,478,479,479,480,482,482,482,486,487,487,489,491,492,493,494,495,495,495,495,497,497,498,498]
[-499,-496,-496,-493,-493,-491,-491,-491,-488,-486,-483,-481,-479,-478,-477,-477,-476,-475,-474,-473,-473,-472,-472,-471,-471,-471,-471,-468,-467,-467,-464,-464,-463,-462,-462,-462,-461,-459,-458,-454,-450,-449,-443,-443,-443,-443,-442,-442,-441,-440,-439,-438,-437,-436,-436,-435,-434,-433,-433,-433,-433,-433,-433,-432,-432,-431,-428,-426,-426,-424,-422,-419,-418,-416,-415,-414,-412,-411,-411,-410,-410,-409,-409,-409,-408,-407,-406,-404,-401,-397,-396,-396,-396,-395,-394,-393,-393,-391,-391,-391,-387,-386,-385,-385,-383,-383,-382,-382,-382,-381,-377,-375,-373,-370,-370,-368,-365,-364,-359,-357,-353,-351,-348,-345,-345,-345,-343,-341,-340,-338,-337,-335,-335,-335,-333,-333,-333,-333,-332,-331,-331,-328,-324,-323,-322,-321,-314,-313,-313,-312,-312,-312,-311,-311,-309,-306,-305,-304,-304,-304,-304,-303,-302,-301,-300,-298,-298,-298,-298,-296,-294,-294,-292,-291,-286,-286,-285,-284,-278,-277,-276,-276,-275,-273,-273,-272,-270,-270,-270,-269,-269,-268,-267,-265,-264,-262,-261,-260,-259,-259,-259,-258,-256,-255,-254,-253,-253,-252,-252,-252,-249,-247,-247,-245,-243,-242,-241,-238,-236,-234,-233,-233,-232,-232,-232,-232,-232,-230,-230,-228,-228,-227,-222,-220,-220,-219,-217,-217,-217,-216,-215,-214,-214,-212,-212,-211,-209,-208,-208,-207,-205,-203,-200,-200,-200,-200,-199,-197,-195,-194,-194,-191,-190,-188,-187,-184,-183,-182,-181,-180,-179,-174,-173,-171,-168,-167,-165,-165,-164,-161,-161,-160,-155,-153,-152,-149,-149,-148,-146,-143,-143,-139,-133,-132,-132,-130,-129,-128,-127,-126,-126,-126,-125,-124,-120,-119,-118,-118,-118,-117,-117,-117,-116,-113,-111,-107,-106,-106,-105,-104,-103,-102,-101,-101,-100,-100,-98,-97,-95,-94,-94,-93,-93,-92,-92,-91,-91,-90,-85,-81,-80,-80,-79,-78,-77,-75,-75,-74,-74,-73,-72,-71,-69,-69,-68,-68,-67,-66,-64,-64,-62,-61,-61,-58,-57,-57,-56,-56,-54,-54,-54,-52,-52,-49,-46,-46,-45,-45,-43,-43,-41,-41,-40,-39,-39,-37,-36,-34,-31,-30,-28,-27,-27,-25,-25,-24,-23,-23,-20,-20,-19,-17,-17,-16,-16,-16,-13,-12,-10,-9,-8,-7,-6,-6,-6,-3,-2,-2,-2,-2,1,1,2,4,8,9,9,9,10,10,11,11,12,18,20,22,22,23,25,26,29,29,35,36,36,37,37,37,38,39,39,39,41,42,42,42,43,43,44,47,48,50,52,53,54,55,55,58,58,58,59,59,59,60,60,60,61,61,62,63,64,64,64,65,65,67,72,73,74,76,77,79,79,80,82,83,83,84,84,84,85,86,90,90,90,90,93,94,95,96,98,99,100,101,102,104,105,105,106,107,109,109,110,111,112,112,113,114,114,115,116,116,117,118,119,120,120,120,121,121,124,124,126,128,129,129,130,130,130,133,134,135,138,138,139,140,141,147,147,151,154,155,156,156,157,158,163,163,164,164,165,166,167,167,168,169,169,169,170,170,171,171,171,172,172,173,173,174,177,178,179,181,182,182,182,183,183,183,184,185,186,189,189,190,190,191,192,192,192,193,194,194,196,196,198,199,200,203,204,204,205,206,210,211,211,211,212,213,215,215,218,219,219,221,221,222,223,223,223,225,225,226,226,226,227,227,229,230,232,232,233,234,235,236,237,238,239,239,241,242,242,243,243,244,244,244,245,245,245,245,246,249,252,252,252,253,254,255,256,256,258,260,261,262,262,262,263,264,264,264,265,266,268,269,271,271,273,273,274,275,276,276,277,277,277,278,279,280,280,280,281,281,282,287,287,289,289,291,293,295,295,296,299,299,300,300,300,301,302,303,304,304,309,309,311,311,315,316,316,316,317,317,320,324,324,326,328,329,331,333,335,338,339,339,339,343,343,345,346,346,347,347,347,349,350,354,356,356,357,357,358,362,363,363,363,364,364,366,368,368,371,371,373,373,375,376,377,381,381,383,384,384,384,384,387,389,390,390,390,390,392,393,393,395,395,395,396,400,400,401,402,402,405,409,413,413,414,414,415,417,417,417,419,420,420,422,423,424,426,426,426,427,428,430,430,432,435,435,435,440,442,442,443,445,447,448,450,451,453,454,455,457,459,459,460,460,462,462,462,462,465,466,466,467,467,468,470,473,473,475,475,476,476,477,477,478,478,480,481,482,483,484,485,485,485,486,486,488,488,490,494,496,500]
198707
*/

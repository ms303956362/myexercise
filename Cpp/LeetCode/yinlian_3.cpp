#include "usual.h"

class Solution {
public:
    int maxInvestment(vector<int>& product, int limit) {
        int n = product.size();
        sort(product.rbegin(), product.rend());
        int l = 1, h = product[0];
        long long ans = 0, mod = 1e9 + 7;
        while (l <= h) {
            int bar = (l + h) / 2;
            int cnt = limit;
            // long long total = 0;
            for (int i = 0; i < n && product[i] >= bar; ++i) {
                int up = max(bar, product[i] - cnt + 1);
                cnt -= product[i] - up + 1;
                // total += (long long)(product[i] + up) * (long long)(product[i] - up + 1) / 2;
            }
            // ans = max(ans, total);
            if (cnt > 0) {
                h = bar - 1;
            } else {
                l = bar + 1;
            }
        }
        int cnt = limit, i = 0;
        priority_queue<int> q;
        for (i = 0; i < n && product[i] >= l; ++i) {
            cnt -= product[i] - l + 1;
            q.emplace(l - 1);
            ans += (long long)(product[i] + l) * (long long)(product[i] - l + 1) / 2;
        }
        while (i < n) {
            q.emplace(product[i]);
            ++i;
        }
        while (q.top() > 0 && cnt > 0) {
            long long num = q.top();
            ans += (long long)num;
            q.pop();
            q.push(num - 1);
            --cnt;
        }
        return ans % mod;
    }
};

int main(int argc, char const *argv[])
{
    // vector<int> v{22963,45991,72919,82466,91964,51237,88126,44588,15390,64293,57162,72660,2059,31287,86197,11445,64937,40975,52568,67500,25283,77686,98641,69955,8780,62306,51549,25186,21128,63247,51126,2017,97038,87355,99527,13632,5295,62340,91114,44466,90437,44795,59401,3550,3031,44218,53715,68809,51139,69230,36046,21534,27515,86648,14120,45538,93007,2017,98658,24357,98311,61215,50981,45128,78518,2649,13554,25842,96439,49962,42459,92008,91181,89796,37042,71570,85267,95989,90627,1250,96584,22664,75138,66465,70108,24098,87896,37206,62137,5456,26518,92870,36852,73617,66301,70492,28279,82311,56098,84820,1863,3573,22826,2706,96892,44821,36899,40413,60115,48530,63334,35366,45423,5887,35777,54557,42279,31824,66327,56640,96361,759,5469,69933,34729,41538,85418,93135,17578,9582,67690,31884,51268,50920,13734,81017,73277,2317,95119,20173,20416,2278,94762,83471,44780,49047,97821,83618,80281,4447,66999,45842,93816,16909,99236,17721,15274,3410,98870,13036,73637,16197,83942,11973,58835,29439,9656,54260,51508,3315,31808,79927,62820,12044,88957,9392,27379,9837,98501,43470,85153,40313,54236,64931,82192,69056,61895,99367,61067,17641,17601,44662,25761,12117,11054,54417,32459,78070,20566,70481,71144,49105,32005,82374,11467,20967,63288,82248,90792,31789,31894,77191,26119,22971,10059,11850,76302,29358,38972,81182,34518,96066,33830,95345,88174,42132,77997,82780,44106,28422,599,8147,6898,81175,93916,53666,16821,84456,76663,63069,74236,80026,55656,86534,68028,3015,83918,68898,61769,14123,56709,69915,77172,55429,90159,88824,98114,43479,96476,49543,77152,56761,58641,36079,55450,55811,18033,89845,78387,60171,67619,10701,91590,29088,64668,23791,83846,18732,63881,1381,24222,46581,32638,27361,88187,34476,1462,5423,41111,28112,82643,22260,4010,96469,11676,33186,30403,31667,51617,96711,66918,1497,34730,86280,50997,75423,39347,58217,46991,42517,93950,82764,65852,97768,31539,50890,73481,77253,11862,30657,41634,30398,24141,70608,41779,20944,91160,56492,36355,68546,90796,59533,63192,2056,26824,79897,2780,25537,55240,99627,53217,64288,33104,45194,99398,17320,13363,3782,55226,95714,92355,78240,53707,58998,57668,67936,40037,96605,41189,38727,79484,31369,13630,39013,90928,34927,24517,36571,51678,42451,94608,70100,55758,1730,77284,26581,51983,91778,96287,87666,28179,26581,95733,38708,10930,56720,63419,77273,27730,7623,79739,31148,26073,56821,29725,268,51948,58489,8683,92464,41072,88396,99853,3757,37151,10763,95278,30837,78874,86213,88759,16785,48204,39326,78146,21293,37569,88469,91708,68733,22644,86515,67021,27884,48002,1161,84425,87957,84864,49782,47058,70973,43243,76774,99985,70081,79118,5780,47592,87188,96543,285,56319,8699,60400,31790,75719,23835,87591,68791,32639,19062,37267,59575,60618,25161,84686,37399,4231,12220,47248,40911,19853,55354,95790,60653,16968,42905,84867,3512,51111,17356,50902,51270,16891,82802,79752,84964,98204,65381,81878,60087,83969,89084,41445,14536,86492,23607,41958,88351,43255,29206,69881,31747,55979,26741,48820,11568,25066,86156,80909,29108,8103,41274,67836,78041,84151,87392,19830,25086,95033,65922,24802,6266,29077,10313,14956,68499,9676,75857,9602,48942,74862,10003,36613,86645,48118,82264,11021,42557,98834,54548,7830,9447,27843,38101,91515,55471,90685,74725,56690,54841,40239,12737,18711,79988,74881,99907,45232,57771,73584,47510,94372,9073,1084,30639,28868,63389,57089,55817,37614,46882,88188,76939,23497,83463,50158,33161,14452,37159,96723,2222,88814,47390,47014,6181,18049,90886,99702,88725,67049,95295,28276,83864,85270,72157,92064,64576,98344,77905,15335,66459,93287,15192,99335,58073,91536,95179,59240,38130,21714,33155,30638,63472,69238,36410,98522,34782,71447,12111,41244,64504,99296,76229,54366,22582,22364,34420,58303,75932,75754,85240,83932,11627,17902,63889,65563,18200,28235,72882,73989,14802,72348,876,38080,29221,6050,96386,11144,63862,36045,98458,72394,71016,47966,48854,15083,40864,32424,59756,81035,15026,17145,42388,65827,16008,47781,56532,58616,29197,9956,46978,37287,65878,85653,9936,64903,57550,33463,29423,16698,53357,57736,65553,60685,62669,96857,89052,38878,28416,49794,45380,70899,27350,95939,89134,23483,36127,54529,71731,37387,77784,3881,63672,28878,11563,10374,97608,81388,10457,11631,3108,7992,29950,91307,60470,4583,21483,528,12704,42759,77037,39934,71804,33700,63384,46887,68814,4840,42957,51024,6708,16838,63656,73000,75898,7094,8291,30266,66716,44468,25808,63617,75135,90305,71476,86111,28312,87839,60833,54436,80803,64922,98170,92487,14039,16988,17704,94700,70629,82514,89635,68528,90654,25374,49209,16747,36078,5018,93555,99989,70951,84010,99731,27487,19450,33537,63606,98667,98282,8151,14000,69615,28664,19158,92815,87614,83424,61489,30937,18935,973,82137,6087,91020,15444,8253,1117,5242,31311,77006,31753,63572,3994,85041,23872,35005,16102,28581,68448,13870,15776,29902,81480,19035,54240,54997};
    // int l = 35174735;
    vector<int> v{2, 1, 3};
    int l = 20;
    cout << Solution().maxInvestment(v, l) << endl;
    return 0;
}
